{"ast":null,"code":"// src/App.js\nimport React,{useState,useEffect,useCallback}from'react';import{useFirebaseAuth}from'./hooks/useFirebaseAuth';import{clientService,subscriptionService,invoiceService,seedService}from'./services/firestore';import{ROUTES}from'./utils/constants';// Componentes\nimport Header from'./components/common/Header';import LoadingSpinner from'./components/common/LoadingSpinner';import LoginPage from'./components/auth/LoginPage';import FirebaseSetup from'./components/auth/FirebaseSetup';import Dashboard from'./components/dashboard/Dashboard';import ClientsPage from'./components/clients/ClientsPage';import ReportsPage from'./components/reports/ReportsPage';// Estilos\nimport'./styles/globals.css';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const{user,loading:authLoading,signIn,logout}=useFirebaseAuth();const[currentView,setCurrentView]=useState(ROUTES.DASHBOARD);const[dataLoading,setDataLoading]=useState(false);// Estados dos dados\nconst[clients,setClients]=useState([]);const[subscriptions,setSubscriptions]=useState([]);const[invoices,setInvoices]=useState([]);// Verificar se Firebase está configurado\nconst isFirebaseConfigured=()=>{const requiredVars=['REACT_APP_FIREBASE_API_KEY','REACT_APP_FIREBASE_PROJECT_ID'];return requiredVars.every(envVar=>process.env[envVar]);};// Carregar dados do usuário\nconst loadUserData=useCallback(async()=>{if(!user)return;setDataLoading(true);try{const[clientsData,subscriptionsData,invoicesData]=await Promise.all([clientService.getAll(),subscriptionService.getAll(),invoiceService.getAll()]);setClients(clientsData);setSubscriptions(subscriptionsData);setInvoices(invoicesData);}catch(error){console.error('Erro ao carregar dados do usuário:',error);}finally{setDataLoading(false);}},[user]);// Criar dados de exemplo\nconst handleCreateSampleData=async()=>{if(!user)return;try{// Verificar se já existem clientes\nif(clients.length>0){alert('Dados de exemplo já existem!');return;}setDataLoading(true);const result=await seedService.createSampleData();if(result.success){await loadUserData();alert('Dados de exemplo criados com sucesso!');}else{alert('Erro ao criar dados de exemplo: '+result.error);}}catch(error){console.error('Erro ao criar dados de exemplo:',error);alert('Erro ao criar dados de exemplo');}finally{setDataLoading(false);}};// Carregar dados quando usuário faz login\nuseEffect(()=>{if(user){loadUserData();}else{// Limpar dados quando usuário faz logout\nsetClients([]);setSubscriptions([]);setInvoices([]);}},[user,loadUserData]);// Loading inicial da autenticação\nif(authLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 flex items-center justify-center\",children:/*#__PURE__*/_jsx(LoadingSpinner,{size:\"large\",message:\"Carregando...\"})});}// Firebase não configurado\nif(!isFirebaseConfigured()){return/*#__PURE__*/_jsx(FirebaseSetup,{});}// Usuário não autenticado\nif(!user){return/*#__PURE__*/_jsx(LoginPage,{onLogin:signIn});}// Aplicação principal\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-50\",children:[/*#__PURE__*/_jsx(Header,{user:user,onLogout:logout,currentView:currentView,onViewChange:setCurrentView,onCreateSampleData:handleCreateSampleData}),/*#__PURE__*/_jsx(\"main\",{className:\"container mx-auto px-4 py-8\",children:dataLoading?/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-12\",children:/*#__PURE__*/_jsx(LoadingSpinner,{size:\"medium\",message:\"Carregando dados...\"})}):/*#__PURE__*/_jsxs(_Fragment,{children:[currentView===ROUTES.DASHBOARD&&/*#__PURE__*/_jsx(Dashboard,{invoices:invoices,setInvoices:setInvoices,clients:clients}),currentView===ROUTES.CLIENTS&&/*#__PURE__*/_jsx(ClientsPage,{clients:clients,setClients:setClients,subscriptions:subscriptions,setSubscriptions:setSubscriptions}),currentView===ROUTES.REPORTS&&/*#__PURE__*/_jsx(ReportsPage,{invoices:invoices,clients:clients})]})})]});}export default App;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}